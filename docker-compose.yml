services:
  api:
    build:
      context: .
      args:
        GIT_SHA: ${GIT_SHA:-dev}
    image: video-service-api:${GIT_SHA:-dev}
    env_file: .env
    environment:
      - AUTH_BASE_URL=http://host.docker.internal:8000    
    extra_hosts:
      - "host.docker.internal:host-gateway"   # garante no Linux/WSL    
    ports:
      - "8094:8094"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8094
    depends_on:
      localstack:
        condition: service_healthy
    restart: unless-stopped

  localstack:
    image: localstack/localstack:stable
    environment:
      - SERVICES=s3,sqs,dynamodb
      - DEBUG=1
      - AWS_DEFAULT_REGION=us-east-1
    ports:
      - "4566:4566"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./scripts/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh
    healthcheck:
      test: ["CMD", "bash", "-lc", "awslocal s3 ls >/dev/null 2>&1 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./observability/prometheus:/etc/prometheus:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    ports:
      - "9090:9090"
    depends_on:
      - api
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin-fiap
    ports:
      - "3000:3000"
    volumes:
      # Provisioning (datasource + dashboards)
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./observability/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      # JSONs dos dashboards que ser√£o carregados pelo provider acima
      - ./observability/grafana/dashboards:/etc/grafana/dashboards:ro
    depends_on:
      - prometheus
    restart: unless-stopped

